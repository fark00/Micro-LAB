;#include <header.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;	flags -> R17

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
	cli
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;
;// External Interrupt 1 service routine
;interrupt [EXT_INT1] void ext_int1_isr(void)
; 0002 0005 {
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0002 0006     // Place your code here
; 0002 0007     if(PINB.4 == 0){
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0002 0008         // timer start
; 0002 0009         lcd_clear();
;PCODE: $0000001C VOL: 0
; 0002 000A         lcd_puts("start");
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0002 000B         delay_ms(500);
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0002 000C     }
; 0002 000D     if(PINB == 0){
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0002 000E         //timer stop
; 0002 000F         lcd_clear();
;PCODE: $00000026 VOL: 0
; 0002 0010         lcd_puts("stop");
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0002 0011         delay_ms(500);
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0002 0012     }
; 0002 0013 }
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0

	.DSEG
_0x40005:
	.BYTE 0xB
;
;// Timer 0 overflow interrupt service routine
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0002 0017 {

	.CSEG
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0002 0018     // Reinitialize Timer 0 value
; 0002 0019     TCNT0=0xB2;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0002 001A     // Place your code here
; 0002 001B 
; 0002 001C }
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
