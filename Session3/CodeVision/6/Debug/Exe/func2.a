;#include <header.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;void func2(void){
; 0002 0003 void func2(void){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0002 0004     int i = 0, j;
; 0002 0005     char temp[17];
; 0002 0006     char arr[]="Welcome to the online lab classes due to Corona disease.";
; 0002 0007     char len = strlen(arr);
; 0002 0008       lcd_clear();
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;	i -> R16,R17
;	j -> R18,R19
;	temp -> Y+63
;	arr -> Y+6
;	len -> R21
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0002 0009     lcd_puts("Qst2: Start ...");
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0002 000A     delay_ms(1000);
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0002 000B     lcd_init(16);
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0002 000C     lcd_clear();
;PCODE: $00000022 VOL: 0
; 0002 000D     while(i != len){
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0002 000E         for(j = 0; j < 16; j = j + 1){
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0002 000F             if(arr[i] == '\0')
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0002 0010                 break;
;PCODE: $00000037 VOL: 0
; 0002 0011             temp[j] = arr[i+j];
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0002 0012         }
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0002 0013         temp[16]='\0';
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0002 0014         i = i + 1;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0002 0015         lcd_clear();
;PCODE: $0000004D VOL: 0
; 0002 0016         lcd_gotoxy(0,0);
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0002 0017         lcd_puts(temp);
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0002 0018         delay_ms(100);
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0002 0019     }
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0002 001A     lcd_clear();
;PCODE: $00000059 VOL: 0
; 0002 001B     return;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0002 001C }
;PCODE: $0000005D VOL: 0

	.DSEG
_0x40004:
	.BYTE 0x10
