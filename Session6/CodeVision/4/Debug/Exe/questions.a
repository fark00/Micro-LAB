;#include <headers.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;
;void question1(void){
; 0002 0004 void question1(void){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0002 0005     int j = 0, k = 0;
; 0002 0006    data=0;
;PCODE: $0000000F VOL: 0
;	j -> R16,R17
;	k -> R18,R19
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0002 0007    i=0;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0002 0008    mat=0;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0002 0009    pat=0;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0002 000A    lcd_clear();
;PCODE: $0000001C VOL: 0
; 0002 000B    lcd_puts("Q1 started!");
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0002 000C    for(i=0;i<8;i++){
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0002 000D         data = read_adc(i);
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0002 000E         pat = data * 5;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0002 000F         mat = pat / 1023;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0002 0010         mat = mat * 1000;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0002 0011         data = floor(mat);
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0002 0012         sprintf(stringdata,"ADC(%d): %d mv",i,data);
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0002 0013         lcd_gotoxy(0,1);
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0002 0014         lcd_puts("                 ");
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0002 0015         lcd_gotoxy(0,1);
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0002 0016         lcd_puts(stringdata);
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0002 0017         j = 0;
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0002 0018         while(j < 10000){
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0002 0019             j++;
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0002 001A             k = 0;
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0002 001B             while(k<90)
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0002 001C                 k++;
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0002 001D }
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0002 001E    }
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0002 001F }
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0

	.DSEG
_0x40003:
	.BYTE 0x1E
;
;void question2(void){
; 0002 0021 void question2(void){

	.CSEG
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0002 0022 
; 0002 0023     i = 0;
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0002 0024     #asm("sei")
;PCODE: $00000080 VOL: 0
	sei
;PCODE: $00000081 VOL: 0
; 0002 0025 }
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;
;void question3(void){
; 0002 0027 void question3(void){
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0002 0028     #asm("sei")
;PCODE: $00000086 VOL: 0
	sei
;PCODE: $00000087 VOL: 0
; 0002 0029 }
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
